plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'com.rabbitown'
version '1.0.0-alpha.4'

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
    maven { url 'http://repo.extendedclip.com/content/repositories/placeholderapi' }
    maven { url 'http://repo.onarandombox.com/content/groups/public' }
}

dependencies {
    implementation 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'

    implementation fileTree('libs')

    shadow "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.google.code.findbugs:annotations:3.0.1'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml' expand 'version': project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier "sources"
            }

        }
    }
    repositories {
        maven {
            url = project.properties.repo_address
            credentials {
                username project.properties.repo_username as String
                password project.properties.repo_password as String
            }
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}